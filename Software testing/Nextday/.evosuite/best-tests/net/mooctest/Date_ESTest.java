/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 24 02:57:15 GMT 2018
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.Date;
import net.mooctest.Day;
import net.mooctest.Month;
import net.mooctest.Year;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Date_ESTest extends Date_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = new Date(4, 4, 4);
      Year year0 = date0.getYear();
      assertTrue(year0.isLeap());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = new Date(1, 1, (-1042));
      Year year0 = date0.getYear();
      assertEquals((-1042), year0.getYear());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = null;
      try {
        date0 = new Date(0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid month
         //
         verifyException("net.mooctest.Year", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Date date0 = new Date(1, 1, 1098);
      Date date1 = new Date(1, 2, 1098);
      boolean boolean0 = date0.equals(date1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      Date date1 = new Date(2, 1, 1);
      boolean boolean0 = date0.equals(date1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date date0 = new Date(6, 6, 6);
      Date date1 = new Date(6, 6, (-1042));
      boolean boolean0 = date0.equals(date1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      boolean boolean0 = date0.equals(date0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date date0 = new Date(6, 6, 6);
      Object object0 = new Object();
      boolean boolean0 = date0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = new Date(6, 30, 30);
      date0.increment();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      date0.increment();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      Month month0 = date0.getMonth();
      assertEquals(1, month0.getMonth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      date0.printDate();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      String string0 = date0.toString();
      assertEquals("1/1/1", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = new Date(1, 1, 1);
      Day day0 = date0.getDay();
      assertEquals(1, day0.getDay());
  }
}
